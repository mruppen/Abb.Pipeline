# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- develop
- feature/*
- release/*
- hotfix/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: GitVersion@5
  displayName: 'GitVersion'

- task: UseDotNet@2
  displayName: 'Use .NET Core 3.0.x SDK'
  inputs:
    packageType: sdk
    version: 3.0.x
#    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: UseDotNet@2
  displayName: 'Install .NET Core 2.2.x runtime'
  inputs:
    version: '2.2.x'
    packageType: runtime

- task: NuGetToolInstaller@0
  inputs:
    versionSpec: 5.x

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'
    projects: '**/*.sln'
    arguments:  '--configuration $(BuildConfiguration) /p:VersionPrefix=$(GitVersion.MajorMinorPatch) /p:VersionSuffix=$(GitVersion.PreReleaseTag)'
    
- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: build
    projects: '**/*.sln'
    arguments:  '--configuration $(BuildConfiguration) /p:VersionPrefix=$(GitVersion.MajorMinorPatch) /p:VersionSuffix=$(GitVersion.PreReleaseTag)'
    
- task: DotNetCoreCLI@2
  displayName: 'Test'
  inputs:
    command: test
    nobuild: true
    projects: '**/*.sln'
    arguments:  '--configuration $(BuildConfiguration) /p:VersionPrefix=$(GitVersion.MajorMinorPatch) /p:VersionSuffix=$(GitVersion.PreReleaseTag)'

- task: DotNetCoreCLI@2
  displayName: 'Pack'
  inputs:
    command: pack
    projects: '**/*.sln'
    nobuild: true
    versioningScheme: byEnvVar
    versionEnvVar: GitVersion.NuGetVersion
    includesymbols: true

- task: NuGetCommand@2
  displayName: 'Publish package'
  inputs:
    command: push
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'NuGet'